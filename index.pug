doctype
html(lang='en')
  head
    meta(charset='utf-8')
    meta(name="viewport", content="width=device-width, initial-scale=1")
    title Weekwise
    style.
      :root{
        font-family: system-ui, sans-serif;
      }
      * {
        box-sizing: border-box;
      }
      main {
        max-width: 20rem;
        margin: 0 auto;
      }
      label.blk {
        display: grid;
        grid-template-rows: auto 2rem;
      }
      label.blk input,
      label.blk select {
        grid-row: 2/3;
      }
      input, select, fieldset {
        border: thin solid currentColor;
        border-radius: .25rem;
        padding: .25rem .3rem;
      }
      .is-disab,
      :disabled {
        color: lightgrey;
      }
      input[type="reset"],
      input[type="submit"] {
        height: 2rem;
        //- display: block;
        //- margin-inline-start: auto
      }
      form > *:not(:last-child) {
        margin-block-end: .5rem;
      }
      .grid2 {
        display: grid;
        grid-template-columns: 1fr 1fr;
      }
      .grid4 {
        display: grid;
        grid-template-columns: 1fr 1fr 1fr 1fr;
      }
      .aln-R {
        text-align: right;
      }
      label input[type="radio"] {
        margin-inline-end: .5rem;
      }
      footer {
        margin-top: 1rem;
      }

  body
    main
      h1 Generate a calendar
      form(action="g")#form
        label.blk Start date
          input(type="date", name="s", value="2019-10-28")
          input(type="button" value="Today")#btn-today
        div.grid2
          label
            input#opt-duration(form="fakeForm", type="radio", name="method", checked)
            | Duration
          label
            input#opt-end(form="fakeForm", type="radio", name="method")
            | End Date
        label.blk.js-duration Duration
          input#inp-dl(type="number", name="d", value="1").js-duration
          select(name="du")#inp-du.js-duration
            option(value="d") Day
            option(value="w", selected) Week
            option(value="m") Month
        label.blk.js-end.is-disab End date
          input#inp-end(type="date", name="e", disabled).js-end.is-disab
        fieldset.grid4
          legend Presets
          input(type="button", data-month=0, value="January").js-btn-month
          input(type="button", data-month=1, value="February").js-btn-month
          input(type="button", data-month=2, value="March").js-btn-month
          input(type="button", data-month=3, value="April").js-btn-month
          input(type="button", data-month=4, value="May").js-btn-month
          input(type="button", data-month=5, value="June").js-btn-month
          input(type="button", data-month=6, value="July").js-btn-month
          input(type="button", data-month=7, value="August").js-btn-month
          input(type="button", data-month=8, value="September").js-btn-month
          input(type="button", data-month=9, value="October").js-btn-month
          input(type="button", data-month=10, value="November").js-btn-month
          input(type="button", data-month=11, value="December").js-btn-month
        label.blk Week start
          select(name="ws")
            option(value="", selected) (Auto)
            option(value=1) Monday
            option(value=2) Tuesday
            option(value=3) Wednesday
            option(value=4) Thusday
            option(value=5) Friday
            option(value=6) Saturday
            option(value=0) Sunday
        div.aln-R
          input(type="reset",value="Reset")
          input(type="submit",value="Generate")
      
      footer
        if repo
          small Sourcecode available on #[a(href=repo) GitHub].

    script(src="dayjs.min.js")
    script.
      const start = document.getElementsByName('s')[0];
      start.defaultValue = dayjs().format('YYYY-MM-DD');
      const method = document.getElementsByName('method');
      const durInputs = Array.from(document.getElementsByClassName('js-duration'));
      const endInputs = Array.from(document.getElementsByClassName('js-end'));
      const end = document.getElementById('inp-end');
      const wks = document.getElementsByName('ws')[0];
      const du = document.getElementById('inp-du');
      const dl = document.getElementById('inp-dl');
      const units = {
        d: 'days',
        w: 'weeks',
        m: 'months'
      }
      const todayButton = document.getElementById('btn-today');
      const monthButtons = document.getElementsByClassName('js-btn-month');
      function methodCheck () {
        if (document.getElementById('opt-duration').checked) {
          durInputs.forEach(e => {
            e.disabled = false
            e.classList.remove('is-disab')
          });
          endInputs.forEach(e => {
            e.disabled = true
            e.classList.add('is-disab')
          });
          end.value = "";
        } else {
          durInputs.forEach(e => {
            e.disabled = true
            e.classList.add('is-disab')
          });
          endInputs.forEach(e => {
            e.disabled = false
            e.classList.remove('is-disab')
          });
          if (end.value === "") end.value = dayjs(start.value).add(dl.value, units[du.value]).subtract(1, 'day').format('YYYY-MM-DD');
        }
      }
      document.addEventListener('change', event => {
        if (Array.from(method).indexOf(event.target) > -1) methodCheck()
      })
      todayButton.addEventListener('click', event => start.value = dayjs().format('YYYY-MM-DD'));
      Array.from(monthButtons).forEach(button => {
        button.addEventListener('click', event => {
          let x = dayjs(start.value).isValid() ? dayjs(start.value) : dayjs();
          start.value = x.month(button.dataset.month).date(1).format('YYYY-MM-DD');
          dl.value = 1;
          du.value = 'm';
          du.value = 'm';
          wks.value = 1;
          document.getElementById('opt-duration').checked = true;
          methodCheck(); 
        })
      });
